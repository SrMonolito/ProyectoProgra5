//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProjectoProgra5.DBContext
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ProyectoProgra5Entities1 : DbContext
    {
        public ProyectoProgra5Entities1()
            : base("name=ProyectoProgra5Entities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<SP_Buscar_Cliente_por_Id_Result> SP_Buscar_Cliente_por_Id(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Buscar_Cliente_por_Id_Result>("SP_Buscar_Cliente_por_Id", idParameter);
        }
    
        public virtual ObjectResult<SP_Buscar_Marca_por_id_Result> SP_Buscar_Marca_por_id(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Buscar_Marca_por_id_Result>("SP_Buscar_Marca_por_id", idParameter);
        }
    
        public virtual ObjectResult<SP_Buscar_Modelo_por_id_Result> SP_Buscar_Modelo_por_id(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Buscar_Modelo_por_id_Result>("SP_Buscar_Modelo_por_id", idParameter);
        }
    
        public virtual ObjectResult<SP_Buscar_Producto_por_Id_Result> SP_Buscar_Producto_por_Id(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Buscar_Producto_por_Id_Result>("SP_Buscar_Producto_por_Id", idParameter);
        }
    
        public virtual ObjectResult<SP_Buscar_Venta_por_id_Result> SP_Buscar_Venta_por_id(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Buscar_Venta_por_id_Result>("SP_Buscar_Venta_por_id", idParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int SP_Editar_Cliente(Nullable<int> id, string nombre, string apellidos, Nullable<int> cedula, Nullable<int> telefono)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(int));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Editar_Cliente", idParameter, nombreParameter, apellidosParameter, cedulaParameter, telefonoParameter);
        }
    
        public virtual int SP_Editar_Modelo(Nullable<int> id, string nombre, string especificaciones)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var especificacionesParameter = especificaciones != null ?
                new ObjectParameter("Especificaciones", especificaciones) :
                new ObjectParameter("Especificaciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Editar_Modelo", idParameter, nombreParameter, especificacionesParameter);
        }
    
        public virtual int SP_Editar_Producto(Nullable<int> id, string nombre, Nullable<int> precioUnidad, Nullable<int> cantidad, Nullable<int> marca_id, Nullable<int> modelo_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var precioUnidadParameter = precioUnidad.HasValue ?
                new ObjectParameter("PrecioUnidad", precioUnidad) :
                new ObjectParameter("PrecioUnidad", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var marca_idParameter = marca_id.HasValue ?
                new ObjectParameter("Marca_id", marca_id) :
                new ObjectParameter("Marca_id", typeof(int));
    
            var modelo_idParameter = modelo_id.HasValue ?
                new ObjectParameter("Modelo_id", modelo_id) :
                new ObjectParameter("Modelo_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Editar_Producto", idParameter, nombreParameter, precioUnidadParameter, cantidadParameter, marca_idParameter, modelo_idParameter);
        }
    
        public virtual int SP_Guardar_Cliente(string nombre, string apellidos, Nullable<int> cedula, Nullable<int> telefono)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var cedulaParameter = cedula.HasValue ?
                new ObjectParameter("Cedula", cedula) :
                new ObjectParameter("Cedula", typeof(int));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Guardar_Cliente", nombreParameter, apellidosParameter, cedulaParameter, telefonoParameter);
        }
    
        public virtual int SP_Guardar_Detalles_Venta(Nullable<int> id_producto, Nullable<int> cantidad_Producto)
        {
            var id_productoParameter = id_producto.HasValue ?
                new ObjectParameter("id_producto", id_producto) :
                new ObjectParameter("id_producto", typeof(int));
    
            var cantidad_ProductoParameter = cantidad_Producto.HasValue ?
                new ObjectParameter("cantidad_Producto", cantidad_Producto) :
                new ObjectParameter("cantidad_Producto", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Guardar_Detalles_Venta", id_productoParameter, cantidad_ProductoParameter);
        }
    
        public virtual int SP_Guardar_Marca(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Guardar_Marca", nombreParameter);
        }
    
        public virtual int SP_Guardar_Modelo(string nombre, string especificaciones)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var especificacionesParameter = especificaciones != null ?
                new ObjectParameter("Especificaciones", especificaciones) :
                new ObjectParameter("Especificaciones", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Guardar_Modelo", nombreParameter, especificacionesParameter);
        }
    
        public virtual int SP_Guardar_Producto(string nombre, Nullable<int> precioUnidad, Nullable<int> cantidad, Nullable<int> marca_id, Nullable<int> modelo_id)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var precioUnidadParameter = precioUnidad.HasValue ?
                new ObjectParameter("PrecioUnidad", precioUnidad) :
                new ObjectParameter("PrecioUnidad", typeof(int));
    
            var cantidadParameter = cantidad.HasValue ?
                new ObjectParameter("Cantidad", cantidad) :
                new ObjectParameter("Cantidad", typeof(int));
    
            var marca_idParameter = marca_id.HasValue ?
                new ObjectParameter("Marca_id", marca_id) :
                new ObjectParameter("Marca_id", typeof(int));
    
            var modelo_idParameter = modelo_id.HasValue ?
                new ObjectParameter("Modelo_id", modelo_id) :
                new ObjectParameter("Modelo_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Guardar_Producto", nombreParameter, precioUnidadParameter, cantidadParameter, marca_idParameter, modelo_idParameter);
        }
    
        public virtual int SP_Guardar_Venta(Nullable<int> id_Cliente, Nullable<System.DateTime> fecha)
        {
            var id_ClienteParameter = id_Cliente.HasValue ?
                new ObjectParameter("id_Cliente", id_Cliente) :
                new ObjectParameter("id_Cliente", typeof(int));
    
            var fechaParameter = fecha.HasValue ?
                new ObjectParameter("Fecha", fecha) :
                new ObjectParameter("Fecha", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SP_Guardar_Venta", id_ClienteParameter, fechaParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<SP_Listar_Clientes_Result> SP_Listar_Clientes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listar_Clientes_Result>("SP_Listar_Clientes");
        }
    
        public virtual ObjectResult<SP_Listar_Marcas_Result> SP_Listar_Marcas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listar_Marcas_Result>("SP_Listar_Marcas");
        }
    
        public virtual ObjectResult<SP_Listar_Modelos_Result> SP_Listar_Modelos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listar_Modelos_Result>("SP_Listar_Modelos");
        }
    
        public virtual ObjectResult<SP_Listar_Productos_Result> SP_Listar_Productos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listar_Productos_Result>("SP_Listar_Productos");
        }
    
        public virtual ObjectResult<SP_Listar_Ventas_Result> SP_Listar_Ventas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Listar_Ventas_Result>("SP_Listar_Ventas");
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
